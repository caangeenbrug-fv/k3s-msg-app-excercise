apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: msg-app-deployment
spec:
  selector:
    matchLabels:
      app: msg-app
  template:
    metadata:
      labels:
        app: msg-app
    spec:
      containers:
        - name: msg-app
          image: flikweertvision/msg-app-excercise:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 8080
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: APP_NAME
              value: msg-app
---
apiVersion: v1
kind: Service
metadata:
  name: msg-app-software-service
spec:
  type: ClusterIP
  selector:
    app: msg-app
  ports:
    - port: 80
      targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: msg-app-software-service-headless
spec:
  clusterIP: None
  selector:
    app: msg-app
  ports:
    - port: 80
      targetPort: 8080
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: reader-role
  namespace: default
rules:
- apiGroups: [""]
  resources: ["pods", "services"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: default-reader-role
  namespace: default
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
roleRef:
  kind: Role
  name: reader-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: msg-app-route
spec:
  entryPoints:
    - web
  routes:
    - match: Host(`messaging-app-exercise.localhost`)
      kind: Rule
      services:
        - name: msg-app-software-service
          port: 80
