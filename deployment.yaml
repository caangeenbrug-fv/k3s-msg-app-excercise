apiVersion: apps/v1
kind: Deployment
metadata:
  name: msg-app-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: msg-app
  template:
    metadata:
      labels:
        app: msg-app
    spec:
      containers:
        - name: msg-app
          image: flikweertvision/msg-app-excercise:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 8080
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: APP_NAME
              value: msg-app
---
apiVersion: v1
kind: Service
metadata:
  name: msg-app-service
spec:
  type: ClusterIP
  selector:
    app: msg-app
  ports:
    - port: 80
      targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: msg-app-headless
spec:
  clusterIP: None
  selector:
    app: msg-app
  ports:
    - port: 80
      targetPort: 8080
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: pod-reader
  namespace: default
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: default-pod-reader
  namespace: default
subjects:
- kind: ServiceAccount
  name: default
  namespace: default
roleRef:
  kind: Role
  name: pod-reader
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress
spec:
  rules:
    - host: casperflikweert.net
      http:
        paths:
          - path: /msg-app
            pathType: Prefix
            backend:
              service:
                name: msg-app-service
                port:
                  number: 80